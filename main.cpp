#include "pose_from_fundamental.h"

int main()
{
    FundamentalMatrix F;
    F[0] = -0.0051918668202215884;
    F[1] = -0.015460923969578466;
    F[2] = 0.35260470328319654;
    F[3] = 0.022451443619913483;
    F[4] = -0.00079225386526248181;
    F[5] = -0.027885130552744289;
    F[6] = -0.35188558059920161;
    F[7] = 0.032418724757766811;
    F[8] = -0.005524537443406155;

    //相机参数
    /*第一个相机的内外参数*/
    double f1 = 0.972222208;
    /*第二个相机的内外参数*/
    double f2 = 0.972222208;

    //相机内参矩阵
    math::Matrix3d K1(0.0), K2(0.0);
    K1(0, 0) = K1(1, 1) = f1; K1(2,2)=1.0;
    K2(0, 0) = K2(1, 1) = f2; K2(2,2) =1.0;

    //用于测试相机姿态的正确性
    math::Vec2d p1={0.18012331426143646, -0.15658402442932129};
    math::Vec2d p2={0.2082643061876297, -0.035404585301876068};

    pose corr_pose = pose_from_fundamental(F,K1,K2,p1,p2);

    std::cout<<"R: "<<corr_pose.first<<std::endl;
    std::cout<<"t: "<<corr_pose.second<<std::endl;

    std::cout<<"Result should be: \n";
    std::cout<<"R: \n"
             << "0.999827 -0.0119578 0.0142419\n"
             << "0.0122145 0.999762 -0.0180719\n"
             << "-0.0140224 0.0182427 0.999735\n";
    std::cout<<"t: \n"
             <<"0.0796625 0.99498 0.0605768\n";
    
    std::cin.get();
}